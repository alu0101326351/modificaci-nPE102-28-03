{"version":3,"file":"/home/usuario/modi/src/primeNumber.ts","sources":["/home/usuario/modi/src/primeNumber.ts"],"names":[],"mappings":";;;AAAA;;GAEG;AACH,MAAa,WAAW;IAKpB;;OAEG;IACH,gBAAuB,CAAC;IAExB;;;;OAIG;IACI,MAAM,CAAC,cAAc;QACxB,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE;YAC5B,WAAW,CAAC,WAAW,GAAG,IAAI,WAAW,EAAE,CAAC;SAC7C;QACD,OAAO,WAAW,CAAC,WAAW,CAAC;IACnC,CAAC;IAED;;;;OAIG;IACI,WAAW,CAAC,GAAW;QAC1B,IAAI,MAAM,GAAa,EAAE,CAAC;QAE1B,KAAK,IAAI,CAAC,GAAW,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,EAAE;YAElC,IAAI,OAAO,GAAY,IAAI,CAAC;YAC5B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;gBACxB,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAC;oBACZ,OAAO,GAAG,KAAK,CAAC;iBACnB;aACJ;YAED,IAAG,OAAO;gBAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SAC/B;QACD,OAAO,MAAM,CAAC;IAClB,CAAC;IAED;;;;;OAKG;IACI,KAAK,CAAC,GAAW,EAAE,GAAW;QACjC,IAAI,MAAM,GAAa,EAAE,CAAC;QAE1B,IAAI,GAAG,GAAG,CAAC;YAAE,GAAG,GAAG,CAAC,CAAC;QAErB,KAAK,IAAI,CAAC,GAAW,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,EAAE;YAEpC,IAAI,OAAO,GAAY,IAAI,CAAC;YAC5B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;gBACxB,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAC;oBACZ,OAAO,GAAG,KAAK,CAAC;iBACnB;aACJ;YAED,IAAG,OAAO;gBAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SAC/B;QACD,OAAO,MAAM,CAAC;IAClB,CAAC;CACJ;AApED,kCAoEC","sourcesContent":["/**\n * Clase para manejar números primos\n */\nexport class primeNumber {\n\n    private static primeNumber: primeNumber;\n    private firstPrimeNumbers: number[];\n\n    /**\n     * Constructor privado para seguir el patrón singleton\n     */\n    private constructor() {}\n\n    /**\n     * Si la clase aun no se ha instanciado, se llama al constructor, si no se devuelve\n     * la instancia ya creada para preservar el patrón singleton\n     * @returns \n     */\n    public static getPrimeNumber(): primeNumber {\n        if (!primeNumber.primeNumber) {\n          primeNumber.primeNumber = new primeNumber();\n        }\n        return primeNumber.primeNumber;\n    }\n\n    /**\n     * Devuelve un array con los primeros números primos hasta max\n     * @param max \n     * @returns \n     */\n    public firstPrimes(max: number): number[] {\n        let result: number[] = [];\n\n        for (let i: number = 2; i < max; ++i) {\n\n            let isPrime: boolean = true;\n            for (let j = 2; j < i; ++j) {\n                if (i % j === 0){\n                    isPrime = false;\n                }\n            }\n\n            if(isPrime)  result.push(i); \n        }\n        return result;\n    }\n\n    /**\n     * Devuelve un array con los números primos entre min y max\n     * @param min \n     * @param max \n     * @returns \n     */\n    public range(min: number, max: number) {\n        let result: number[] = [];\n\n        if (min < 2) min = 2;\n\n        for (let i: number = min; i < max; ++i) {\n\n            let isPrime: boolean = true;\n            for (let j = 2; j < i; ++j) {\n                if (i % j === 0){\n                    isPrime = false;\n                }\n            }\n\n            if(isPrime)  result.push(i); \n        }\n        return result;\n    }\n}\n"]}